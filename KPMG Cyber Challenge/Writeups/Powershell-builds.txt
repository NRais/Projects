Run Windows PowerShell ISE

-------------------------

get-content myfile.txt | select -first 1 -skip 9

$content = Get-Content "path to user.log"
$count = 0
$target = 3

foreach ($line in $content) {

    $count += 1

    if ($count -eq $target) {

        $line

        break
    }
}

VERY USEFUL POWERSHELL

 

Import-Module ActiveDirectory

 

$Computers = Import-csv "C:\Temp\Computers.csv"

 

ForEach ($Computer In $Computers)

 

{

    $NTName = $Computer.Computer

 

    $LastLogon = (Get-ADComputer -Filter {Name -eq $NTName} -Properties

LastLogonDate).LastLogonDate

 

    "$NTName, $LastLogon" | Out-File -FilePath C:\Temp\CompOut.txt –Append



SAME AS ABOVE TIGHTER CODE


Import-Module ActiveDirectory

 

$data = @()

 

$Names = Get-Content C:\Temp\Out.txt


foreach ($Name in $Names)

{

$displayName = $Name

 

    # DEAL WITH THE output

 
$data += Add-MailboxFolderPermission -Identity SCORPCalendar@parliament.govt.nz:\Calendar -User $displayName -AccessRights Reviewer

}

 
ANOTHER EXAMPLE POWERSHELL

 
$DaysInactive = 30


$time = (Get-Date).Adddays(-($DaysInactive))


Get-ADComputer


-Filter {(Enabled -eq $TRUE -and LastLogonTimeStamp -gt $time)}


-Property *


| ? OperatingSystem -NotLike "*Server*"

 
| Export-CSV "CurrentComputers.csv"

 
EXAMPLE


3. RUN THIS POWERSHELL SCRIPT:  CONVERTNAMETOAD.ps1

 

$data = @()

 

ForEach ($User in (Get-Content c:\temp\jusers2.csv | ConvertFrom-CSV -Header LastName,FirstName))

{   $Filter = "givenName -like ""*$($User.FirstName)*"" -and sn -like ""$($User.LastName)"""

$data += Get-ADUser -Filter $Filter -Properties * | Select-Object SamAccountName

}

$data | Out-File -FilePath C:\Temp\Out.txt -Append


This creates a list of AD names that come from the real names above.

 
CONVERTING CONTENT IN A FILE

 

Import-Module ActiveDirectory

 

$data = @()


$Names = Import-Csv C:\Temp\PS-NAV.txt

foreach ($Name in $Names)

{

$displayName = $Name

    # implicit output


$data += Get-ADUser -Identity $displayName.H1.Trim(' ') -Properties * | Select-Object DisplayName, Department

}

$data | Out-File -FilePath C:\Temp\PS-NAV-NAMES.txt -Append

 
BATCH SHELLS HAVE POWER TOO

 
What ever you do don’t name this file ping!


@Echo OFF


For /F "Usebackq Delims=" %%# in (


    "computerlist.txt"
 

) do (

    Echo+

    Echo [+] Pinging: %%#

 

    Ping -n 1 "%%#" 1>nul && (

 

        Echo     [OK]) || (

 

        Echo     [FAILED])

)

Pause&Exit